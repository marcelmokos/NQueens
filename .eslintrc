// When you write javascript you should follow these soft rules and best practices
// https://github.com/airbnb/javascript

// This is a link to best practices and enforcer settings for eslint
// https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb

// Use this file as a starting point for your project's .eslintrc.
// Copy this file, and add rule overrides as needed.
{
  "extends": "airbnb",
  "parser": "babel-eslint",
  "parserOptions": {
    "sourceType": "module",
    "ecmaFeatures": {
      "experimentalObjectRestSpread": true,
    },
  },
  "env": {
    "es6": true,
    "browser": true,
    "node": true,
    "mocha": true
  },
  "settings": {
    "import/parser": "babel-eslint",
    "import/resolve": {
      "moduleDirectory": ["node_modules", "src"]
    }
  },
  "globals": {
    "ReactElement": true
  },
  "plugins": [
    "react",
    "import"
  ],
  "rules": {
    // require or disallow use of semicolons instead of ASI
    "semi": [2, "never"],
    "no-console":0,

    "import/default": 0,
    "import/no-duplicates": 0,
    "import/named": 0,
    "import/namespace": 0,
    "import/no-unresolved": 0,
    // "import/no-named-as-
    "import/no-use-before-define": 0,

    "react/no-did-mount-set-state": 2,
    "react/no-multi-comp": 0,
    "react/jsx-boolean-value": [2, "always"],
    "react/sort-comp": [
      2, {
        "order": [
          "displayName",
          "propTypes",
          "contextTypes",
          "childContextTypes",
          "mixins",
          "statics",
          "defaultProps",
          "getDefaultProps",
          "getInitialState",
          "getChildContext",
          "componentWillMount",
          "componentDidMount",
          "componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "componentDidUpdate",
          "componentWillUnmount",
          "/^on.+$/",
          "/^get.+$/",
          "/^render.+$/",
          "/^.+$/", // All other methods go here
          "render"
        ]
      }
    ]
  }
}
